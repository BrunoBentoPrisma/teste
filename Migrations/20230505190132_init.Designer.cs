// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ms_Compras.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ms_Compras.Migrations
{
    [DbContext(typeof(MsContext))]
    [Migration("20230505190132_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ArquivosCotacaoCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CompraId")
                        .HasColumnType("uuid")
                        .HasColumnName("CompraId");

                    b.Property<byte[]>("CoteFacil")
                        .HasColumnType("bytea")
                        .HasColumnName("CoteFacil");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<byte[]>("EmbraFarma")
                        .HasColumnType("bytea")
                        .HasColumnName("EmbraFarma");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.HasKey("Id");

                    b.ToTable("ArquivosCotacaoCompra");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Compra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("APartirDe")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("APartirDe");

                    b.Property<bool?>("ConsideraEncomendaFaltas")
                        .HasColumnType("boolean")
                        .HasColumnName("ConsideraEncomendaFaltas");

                    b.Property<bool?>("ConsiderarApenasEmpresaSelecionada")
                        .HasColumnType("boolean")
                        .HasColumnName("ConsiderarApenasEmpresaSelecionada");

                    b.Property<int>("CurvaAbc")
                        .HasColumnType("integer")
                        .HasColumnName("CurvaAbc");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<Guid?>("LaboratorioId")
                        .HasColumnType("uuid")
                        .HasColumnName("LaboratorioId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<int?>("QuantidadeDias")
                        .HasColumnType("integer")
                        .HasColumnName("QuantidadeDias");

                    b.Property<bool?>("SaldoQuantidadeComprometida")
                        .HasColumnType("boolean")
                        .HasColumnName("SaldoQuantidadeComprometida");

                    b.Property<int>("StatusCompra")
                        .HasColumnType("integer")
                        .HasColumnName("StatusCompra");

                    b.Property<int?>("TempoDeReposicao")
                        .HasColumnType("integer")
                        .HasColumnName("TempoDeReposicao");

                    b.Property<int?>("TempoDeReposicaoMaxima")
                        .HasColumnType("integer")
                        .HasColumnName("TempoDeReposicaoMaxima");

                    b.Property<int>("TipoCompra")
                        .HasColumnType("integer")
                        .HasColumnName("TipoCompra");

                    b.Property<int?>("TipoDemanda")
                        .HasColumnType("integer")
                        .HasColumnName("TipoDemanda");

                    b.Property<int?>("TipoValor")
                        .HasColumnType("integer")
                        .HasColumnName("TipoValor");

                    b.Property<decimal>("TotalCompra")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("TotalCompra");

                    b.Property<DateTime>("VendaAte")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("VendaAte");

                    b.Property<DateTime>("VendaDe")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("VendaDe");

                    b.HasKey("Id");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.CompraFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CompraId")
                        .HasColumnType("uuid")
                        .HasColumnName("CompraId");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<DateTime?>("DataPreveEntrega")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataPreveEntrega");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("FormaPagamento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("FormaPagamento");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<string>("Frete")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Frete");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<int>("NumeroNota")
                        .HasColumnType("integer")
                        .HasColumnName("NumeroNota");

                    b.Property<string>("Observacao")
                        .HasMaxLength(30000)
                        .HasColumnType("character varying(30000)")
                        .HasColumnName("Observacao");

                    b.Property<int>("StatusCotacao")
                        .HasColumnType("integer")
                        .HasColumnName("StatusCotacao");

                    b.Property<int>("StatusPedido")
                        .HasColumnType("integer")
                        .HasColumnName("StatusPedido");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("CompraFornecedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ConfigEstoqueFilial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<bool>("ControlaEstoqueMinimoMaximoPorFilial")
                        .HasColumnType("boolean")
                        .HasColumnName("ControlaEstoqueMinimoMaximoPorFilial");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<decimal>("EstoqueMaximo")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("EstoqueMaximo");

                    b.Property<decimal>("EstoqueMinimo")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("EstoqueMinimo");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.HasKey("Id");

                    b.ToTable("ConfigEstoqueFilial");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.EmbalagemOrdemDeProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("AnoOrdemProducao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("AnoOrdemProducao");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uuid")
                        .HasColumnName("GrupoId");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("OrdemDeProducaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("OrdemDeProducaoId");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuatidadeComprometidaLote")
                        .HasColumnType("decimal(24,5)")
                        .HasColumnName("QuatidadeComprometidaLote");

                    b.Property<decimal>("QuatidadeUnidadeEstoque")
                        .HasColumnType("decimal(24,5)")
                        .HasColumnName("QuatidadeUnidadeEstoque");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("EmbalagemOrdemDeProducao");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ErrorLogger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("CustomErrorCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CustomErrorCode");

                    b.Property<string>("CustomErrorMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CustomErrorMessage");

                    b.Property<Guid?>("EmpresaId")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ErrorMessage");

                    b.HasKey("Id");

                    b.ToTable("ErrorLogger");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.FaltasEncomendas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uuid")
                        .HasColumnName("ClienteId");

                    b.Property<Guid?>("CompraId")
                        .HasColumnType("uuid")
                        .HasColumnName("CompraId");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<string>("Ddd")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("Ddd");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uuid")
                        .HasColumnName("GrupoId");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<string>("Observacao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Observacao");

                    b.Property<DateTime?>("PrevisaoDeEntrega")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("PrevisaoDeEntrega");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("Quantidade");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Telefone");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("Tipo");

                    b.Property<Guid>("VendedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("VendedorId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("FaltasEncomendas");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.FormulaVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.HasKey("Id");

                    b.ToTable("FormulaVenda");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<string>("NomeFornecedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NomeFornecedor");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CompraId")
                        .HasColumnType("uuid")
                        .HasColumnName("CompraId");

                    b.Property<bool>("Comprar")
                        .HasColumnType("boolean")
                        .HasColumnName("Comprar");

                    b.Property<decimal>("ConsumoDiario")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ConsumoDiario");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<string>("Ddd")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("Ddd");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Encomenda")
                        .HasColumnType("boolean")
                        .HasColumnName("Encomenda");

                    b.Property<decimal>("Estoque")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Estoque");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<Guid?>("LaboratorioId")
                        .HasColumnType("uuid")
                        .HasColumnName("LaboratorioId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuantidadeCompra")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeCompra");

                    b.Property<decimal>("QuantidadeCompraMaxima")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeCompraMaxima");

                    b.Property<decimal>("QuantidadeTotal")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeTotal");

                    b.Property<decimal>("QuantidadeVendida")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeVendida");

                    b.Property<string>("SelecionadoGerar")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("SelecionadoGerar");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorTotal");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorUnitario");

                    b.Property<decimal>("ValorVendido")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorVendido");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensCompra");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensCompraFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<Guid>("CompraFornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CompraFornecedorId");

                    b.Property<bool>("Comprar")
                        .HasColumnType("boolean")
                        .HasColumnName("Comprar");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataValidade");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuantidadeCompra")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeCompra");

                    b.Property<decimal>("QuatidadeCompraUnidadeEstoque")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuatidadeCompraUnidadeEstoque");

                    b.Property<string>("SelecionadoGerar")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("SelecionadoGerar");

                    b.Property<int>("StatusItemPedido")
                        .HasColumnType("integer")
                        .HasColumnName("StatusItemPedido");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorTotal");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorUnitario");

                    b.Property<decimal>("ValorUnitarioUnidadeEstoque")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorUnitarioUnidadeEstoque");

                    b.HasKey("Id");

                    b.HasIndex("CompraFornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensCompraFornecedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensEmbalagemOrdemDeProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmbalagemOrdemDeProducaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmbalagemOrdemDeProducaoId");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<decimal>("FatorDeCorrecao")
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("FatorDeCorrecao");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<int>("LoteInterno")
                        .HasColumnType("integer")
                        .HasColumnName("LoteInterno");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuantidadeComprometidaLote")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeComprometidaLote");

                    b.Property<decimal>("QuantidadePesada")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadePesada");

                    b.Property<decimal>("QuantidadeSemFator")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeSemFator");

                    b.Property<decimal>("QuantidadeUnidadeEstoque")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeUnidadeEstoque");

                    b.Property<int>("Sequencia")
                        .HasColumnType("integer")
                        .HasColumnName("Sequencia");

                    b.HasKey("Id");

                    b.HasIndex("EmbalagemOrdemDeProducaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensEmbalagemOrdemDeProducao");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensFormulaVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid>("FormulaVendaId")
                        .HasColumnType("uuid")
                        .HasColumnName("FormulaVendaId");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<Guid?>("VendaId")
                        .HasColumnType("uuid")
                        .HasColumnName("VendaId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensFormulaVenda");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensNotaFiscalDeEntrada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<decimal>("Frete")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Frete");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("NotaFiscalDeEntradaId")
                        .HasColumnType("uuid")
                        .HasColumnName("NotaFiscalDeEntradaId");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Quantidade");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Total");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("Validade");

                    b.Property<decimal>("ValorIpi")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorIpi");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorUnitario");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalDeEntradaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensNotaFiscalDeEntrada");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensOrdemDeProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("OrdemDeProducaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("OrdemDeProducaoId");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuantidadeComprometidaLote")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeComprometidaLote");

                    b.Property<decimal>("QuantidadeUnidadeEstoque")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeUnidadeEstoque");

                    b.Property<int>("SequenciaItem")
                        .HasColumnType("integer")
                        .HasColumnName("SequenciaItem");

                    b.HasKey("Id");

                    b.HasIndex("OrdemDeProducaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItensOrdemDeProducao");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Quantidade");

                    b.Property<int>("Sequencia")
                        .HasColumnType("integer")
                        .HasColumnName("Sequencia");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorTotal");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorUnitario");

                    b.Property<Guid>("VendaId")
                        .HasColumnType("uuid")
                        .HasColumnName("VendaId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("ItensVenda");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Laboratorio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.HasKey("Id");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Lote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime>("DataDeEntradaDoLote")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeEntradaDoLote");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<DateTime>("DataDeFabricacaoDoLote")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeFabricacaoDoLote");

                    b.Property<DateTime>("DataDeValidadeDoLote")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeValidadeDoLote");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<string>("NumeroNota")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("NumeroNota");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuantidadeComprometidaLote")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeComprometidaLote");

                    b.Property<string>("SerieNota")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("SerieNota");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Lote");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.MovimentoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("QuantidadeMovimentada")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("QuantidadeMovimentada");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Saldo");

                    b.Property<int>("TipoMovimentoProduto")
                        .HasColumnType("integer")
                        .HasColumnName("TipoMovimento");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("MovimentoProduto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.NotaFiscalDeEntrada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime>("DataDeEmissao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeEmissao");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<decimal>("Frete")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Frete");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<string>("NumeroNota")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("NumeroNota");

                    b.Property<string>("SerieNota")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("SerieNota");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Total");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("NotaFiscalDeEntrada");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.OrdemDeProducao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("AnoOrdemDeProducao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("AnoOrdemDeProducao");

                    b.Property<decimal>("CapsulaOrdemDeProducao")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("CapsulaOrdemDeProducao");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uuid")
                        .HasColumnName("ClienteId");

                    b.Property<decimal>("CodigoForma")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("CodigoForma");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime>("DataDeEmissao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeEmissao");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid?>("FormulaVendaId")
                        .HasColumnType("uuid")
                        .HasColumnName("FormulaVendaId");

                    b.Property<Guid>("GrupoCapsulaId")
                        .HasColumnType("uuid")
                        .HasColumnName("GrupoCapsulaId");

                    b.Property<Guid>("GrupoEmbalagemId")
                        .HasColumnType("uuid")
                        .HasColumnName("GrupoEmbalagemId");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<string>("NumeroOrdemDeProducao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NumeroOrdemDeProducao");

                    b.Property<Guid>("ProdutoCapsulaId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoCapsulaId");

                    b.Property<Guid>("ProdutoEmbalagemId")
                        .HasColumnType("uuid")
                        .HasColumnName("ProdutoEmbalagemId");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<Guid?>("VendaId")
                        .HasColumnType("uuid")
                        .HasColumnName("VendaId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FormulaVendaId");

                    b.HasIndex("VendaId");

                    b.ToTable("OrdemDeProducao");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<decimal?>("AliquotaIcms")
                        .IsRequired()
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("AliquotaIcms");

                    b.Property<int>("Calculo")
                        .HasColumnType("integer")
                        .HasColumnName("Calculo");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("text")
                        .HasColumnName("CodigoBarra");

                    b.Property<string>("CodigoCas")
                        .HasColumnType("text")
                        .HasColumnName("CodigoCas");

                    b.Property<string>("CodigoDcb")
                        .HasColumnType("text")
                        .HasColumnName("CodigoDcb");

                    b.Property<int?>("CurvaAbc")
                        .HasColumnType("integer")
                        .HasColumnName("CurvaAbc");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<DateTime?>("DataUltimaCompra")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataUltimaCompra");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<decimal?>("EstoqueMaximo")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("EstoqueMaximo");

                    b.Property<decimal?>("EstoqueMinimo")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("EstoqueMinimo");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<Guid?>("FornecedorId")
                        .HasColumnType("uuid")
                        .HasColumnName("FornecedorId");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uuid")
                        .HasColumnName("GrupoId");

                    b.Property<bool>("Inativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Inativo");

                    b.Property<bool>("InativoCompras")
                        .HasColumnType("boolean")
                        .HasColumnName("InativoCompras");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<Guid?>("LaboratorioId")
                        .HasColumnType("uuid")
                        .HasColumnName("LaboratorioId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<int>("SituacaoTributaria")
                        .HasColumnType("integer")
                        .HasColumnName("SituacaoTributaria");

                    b.Property<string>("UnidadeEstoque")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("UnidadeEstoque");

                    b.Property<string>("UnidadeManipulacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("UnidadeManipulacao");

                    b.Property<decimal>("ValorCusto")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorCusto");

                    b.Property<decimal?>("ValorCustoMedio")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorCustoMedio");

                    b.Property<decimal?>("ValorVenda")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("ValorVenda");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Venda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime>("DataDeEmissao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeEmissao");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.Property<int>("Orcamento")
                        .HasColumnType("integer")
                        .HasColumnName("Orcamento");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(24,4)")
                        .HasColumnName("Total");

                    b.HasKey("Id");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Vendedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeAlteracao");

                    b.Property<DateTime>("DataDeCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeCadastro");

                    b.Property<DateTime?>("DataDeExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataDeExclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmpresaId");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean")
                        .HasColumnName("Excluido");

                    b.Property<string>("IntegracaoId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("IntegracaoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("NomeCriador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeCriador");

                    b.Property<string>("NomeEditor")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NomeEditor");

                    b.HasKey("Id");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Compra", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId");

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.CompraFornecedor", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.EmbalagemOrdemDeProducao", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.FaltasEncomendas", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("Ms_Compras.Database.Entidades.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Grupo");

                    b.Navigation("Produto");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensCompra", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Compra", null)
                        .WithMany("ItensCompras")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId");

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensCompraFornecedor", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.CompraFornecedor", null)
                        .WithMany("ItensCompraFornecedor")
                        .HasForeignKey("CompraFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensEmbalagemOrdemDeProducao", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.EmbalagemOrdemDeProducao", null)
                        .WithMany("ItensEmbalagemOrdemDeProducao")
                        .HasForeignKey("EmbalagemOrdemDeProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensFormulaVenda", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensNotaFiscalDeEntrada", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.NotaFiscalDeEntrada", "NotaFiscalDeEntrada")
                        .WithMany("ItensNotaFiscalDeEntrada")
                        .HasForeignKey("NotaFiscalDeEntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaFiscalDeEntrada");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensOrdemDeProducao", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.OrdemDeProducao", null)
                        .WithMany("ItensOrdemDeProducao")
                        .HasForeignKey("OrdemDeProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.ItensVenda", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Venda", null)
                        .WithMany("ItensVenda")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Lote", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.MovimentoProduto", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.NotaFiscalDeEntrada", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.OrdemDeProducao", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.FormulaVenda", "FormulaVenda")
                        .WithMany()
                        .HasForeignKey("FormulaVendaId");

                    b.HasOne("Ms_Compras.Database.Entidades.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId");

                    b.Navigation("Cliente");

                    b.Navigation("FormulaVenda");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Produto", b =>
                {
                    b.HasOne("Ms_Compras.Database.Entidades.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Ms_Compras.Database.Entidades.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ms_Compras.Database.Entidades.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId");

                    b.Navigation("Fornecedor");

                    b.Navigation("Grupo");

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Compra", b =>
                {
                    b.Navigation("ItensCompras");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.CompraFornecedor", b =>
                {
                    b.Navigation("ItensCompraFornecedor");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.EmbalagemOrdemDeProducao", b =>
                {
                    b.Navigation("ItensEmbalagemOrdemDeProducao");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.NotaFiscalDeEntrada", b =>
                {
                    b.Navigation("ItensNotaFiscalDeEntrada");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.OrdemDeProducao", b =>
                {
                    b.Navigation("ItensOrdemDeProducao");
                });

            modelBuilder.Entity("Ms_Compras.Database.Entidades.Venda", b =>
                {
                    b.Navigation("ItensVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
